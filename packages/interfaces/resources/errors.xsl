<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet
    version="1.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output method="text" encoding="Windows-1252"/>

    <xsl:template match="/" >
// Autogenerated file

import * as moment from 'moment'
import { BigNumber } from 'bignumber.js'

enum ErrorType {
<xsl:for-each select="/errors/error"><xsl:choose><xsl:when test="position() != 1"><xsl:text>
  </xsl:text></xsl:when>
<xsl:otherwise><xsl:text>  </xsl:text></xsl:otherwise></xsl:choose><xsl:value-of select="./@name"/> = <xsl:value-of select="position()"/><xsl:if test="position() &lt; last()">,</xsl:if></xsl:for-each>
}
<xsl:for-each select="/errors/error">
interface IError<xsl:value-of select="./@name"/> {
  type: ErrorType.<xsl:value-of select="./@name"/><xsl:for-each select="./parameter"><xsl:text>
  </xsl:text><xsl:choose>
  <xsl:when test="./@type='function'"><xsl:value-of select="./@name"/><xsl:if test="./@side!='back'">?</xsl:if>: <xsl:value-of select="./@return"/></xsl:when>
  <xsl:otherwise><xsl:value-of select="./@name"/><xsl:if test="./@optional='true'">?</xsl:if>: <xsl:value-of select="./@type"/></xsl:otherwise>
</xsl:choose></xsl:for-each>
}
</xsl:for-each>
type IError = <xsl:for-each select="/errors/error">IError<xsl:value-of select="./@name"/><xsl:if test="position() &lt; last()"> |
              </xsl:if></xsl:for-each>

export { ErrorType,
         IError,
         <xsl:for-each select="/errors/error">IError<xsl:value-of select="./@name"/><xsl:if test="position() &lt; last()">,
         </xsl:if></xsl:for-each>
       }
</xsl:template>
</xsl:stylesheet>
